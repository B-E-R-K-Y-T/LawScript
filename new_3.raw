ВКЛЮЧИТЬ lib


ОПРЕДЕЛИТЬ ПРОЦЕДУРУ func1(аргумент)(
    ВЕРНУТЬ аргумент + 1;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ func2(аргумент)(
    ВЕРНУТЬ аргумент * 2;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ func()(
    НАПЕЧАТАТЬ "Ты мертв.";
    НАПЕЧАТАТЬ 1 + 1;
    НАПЕЧАТАТЬ "Ты мертв.";
    НАПЕЧАТАТЬ "Ты мертв.";
    ВЕРНУТЬ 1;
)



ОПРЕДЕЛИТЬ ПРОЦЕДУРУ f(аргумент)(
    ЦИКЛ ОТ 1 ДО 10000 (
        НАПЕЧАТАТЬ "Привет мир!";
    )
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ Премия(премия)(
    fwa();
    to_number();
    input();
    НАПЕЧАТАТЬ func1(func1(func2(func1(func()))));
    # input(input(input(input(input(input(""))))));
    #ЗАДАТЬ input = 1;

    ЗАДАТЬ лет = to_number(input("Сколько Вам лет? Напишите: "));

    ЕСЛИ лет МЕНЬШЕ 1 ТО (
        НАПЕЧАТАТЬ "Ты мертв.";
        ВЕРНУТЬ 1;
    )

    ЕСЛИ лет БОЛЬШЕ 18 ТО (
        НАПЕЧАТАТЬ "Привет, бро!";
        ЕСЛИ лет БОЛЬШЕ 100 ТО (
            print("Ого! " +"'"+to_string(лет)+"'" + " - это " + "очень-" * 3 + " много!" );
        )
    )
    ИНАЧЕ (
        НАПЕЧАТАТЬ "Вам пока сюда нельзя!";
        ВЕРНУТЬ 1;
    )

    НАПЕЧАТАТЬ to_string(ИСТИНА) * 2;
    НАПЕЧАТАТЬ ИСТИНА * 11;

    ЗАДАТЬ переменную1 = to_number("1e1");
    НАПЕЧАТАТЬ переменную1 + 1;
    ЗАДАТЬ переменную = to_number(input("->"));
    НАПЕЧАТАТЬ переменную * 2;
    # f(10);

    НАПЕЧАТАТЬ 1;
    НАПЕЧАТАТЬ (1 ИЛИ 0) + 1;
    #recursive(99);
    #НАПЕЧАТАТЬ recursive(recursive(10000 + 10000 / 2));
    #НАПЕЧАТАТЬ "{} + {} = {}";

    # TODO: Исправить этот баг!!! Это выражение по какой-то причине считается валидным.
    # НАПЕЧАТАТЬ *2(+1+1);

    НАПЕЧАТАТЬ 2 * (test_func(test_func(1 + 1) * 2) - 1);
    НАПЕЧАТАТЬ test_func(test_func(1 + 1) * 2 ^ recursive(10));
    НАПЕЧАТАТЬ test_func(2 * test_func(1 + 1));

    #НАПЕЧАТАТЬ ЗП_С;
    ((((((2+2))))))*2;
    ##################### 1 / 0; # Будет ошибка. Деление на 0
    #ЗАДАТЬ ЗП_С = 1 + 1;

    #ЦИКЛ ОТ 1 ДО 100 * 1000 (
    #    1 + 1;
    #)

    ВЕРНУТЬ 1;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ test_func(arg1)(
    # НАПЕЧАТАТЬ "ПРИВЕТ ИЗ test_func";
    ВЕРНУТЬ arg1 + 2;
)


ОПРЕДЕЛИТЬ ПРОЦЕДУРУ recursive(arg)(
    #НАПЕЧАТАТЬ "ПРИВЕТ ИЗ recursive";

    #test_func(arg);

    ЕСЛИ arg БОЛЬШЕ 100 ТО (
        НАПЕЧАТАТЬ "arg=";
        НАПЕЧАТАТЬ arg;
        ВЕРНУТЬ arg;
    )

    ВЕРНУТЬ recursive(arg + 1);
)


ОПРЕДЕЛИТЬ САНКЦИЮ название_типа_санкции2 (
    СТАТЬЯ Статья 8.4 КоАП,
)
ОПРЕДЕЛИТЬ ПРАВО название_права (
    ОПИСАНИЕ Описание права))),
)

ОПРЕДЕЛИТЬ ОБЯЗАННОСТЬ название_обязанности11 (
    ОПИСАНИЕ Описание обязанности))),
)

ОПРЕДЕЛИТЬ ПРАВИЛО названиеправила (
    ОПИСАНИЕ Описание (,,,,,,,((правила))),,,,
)

ОПРЕДЕЛИТЬ СУБЪЕКТ название_субъекта (
    ИМЯ Добрый Добряк Добрякович,
)

ОПРЕДЕЛИТЬ ОБЪЕКТ название_объекта (
    ИМЯ Загрязнённый водоём,
)

ОПРЕДЕЛИТЬ УСЛОВИЕ название_условия (
    ОПИСАНИЕ Условие, при котором предприятие должно соблюдать экологические нормы, включая запрет на сбросы загрязняющих веществ в водоёмы.,
    КРИТЕРИИ (
		ПремияСотрудника ПРОЦЕДУРА Премия МЕНЬШЕ ,
    )
)


СОЗДАТЬ ДОКУМЕНТ название_документа (
    ДИСПОЗИЦИЯ (
        ПРАВО название_права,
        ОБЯЗАННОСТЬ название_обязанности11,
        ПРАВИЛО названиеправила,
    )
    САНКЦИЯ (
        ТИПЫ [название_типа_санкции название_типа_санкции],
        СТЕПЕНЬ СТРОГОСТИ ОЧЕНЬ_ВЫСОКАЯ,
        ПРОЦЕССУАЛЬНЫЙ АСПЕКТ Экологическая_экспертиза,
    )
    ГИПОТЕЗА (
        СУБЪЕКТ название_субъекта,
        ОБЪЕКТ название_объекта,
        УСЛОВИЕ название_условия,
    )
)


СОЗДАТЬ ФАКТИЧЕСКУЮ СИТУАЦИЮ название_фактической_ситуации2 (
    ОБЪЕКТ название_объекта,
    СУБЪЕКТ название_субъекта,

   ДАННЫЕ (
		ПремияСотрудника 150000,
    )
)


ПРОВЕРКА проверка_субъекта3 (
	ФАКТИЧЕСКАЯ СИТУАЦИЯ название_фактической_ситуации2,
	ДОКУМЕНТ название_документа,
)
