ВКЛЮЧИТЬ func
ВКЛЮЧИТЬ lib


ОПРЕДЕЛИТЬ ПРОЦЕДУРУ от()(
    НАПЕЧАТАТЬ "от...";
    ВЕРНУТЬ 1;
)


ОПРЕДЕЛИТЬ ПРОЦЕДУРУ а1()(
    а2();
    ВЕРНУТЬ 1;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ а2()(
а3();
    ВЕРНУТЬ 1;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ а3()(
    НАПЕЧАТАТЬ -а4();
    ВЕРНУТЬ 1;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ а4()(
    #ошибочная1();
    ВЕРНУТЬ 1;
)


ОПРЕДЕЛИТЬ ПРОЦЕДУРУ до()(
    # НАПЕЧАТАТЬ test_func___4({{%void_arg%}});
    НАПЕЧАТАТЬ "до...";
    а1();
    ВЕРНУТЬ 100000000000000000;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ test_func___412213(s)(

    test_func___4(1);
)
ОПРЕДЕЛИТЬ ПРОЦЕДУРУ test_func___4(s)(
    НАПЕЧАТАТЬ от;
    НАПЕЧАТАТЬ тест;
    # НАПЕЧАТАТЬ test_func___4({{%void_arg%}});
    НАПЕЧАТАТЬ test_func___4;
    НАПЕЧАТАТЬ to_string(1);

    ЦИКЛ ОТ от() ДО до() (
    )
    # ЗАДАТЬ s = 1;
    s = s ^ 2;
    НАПЕЧАТАТЬ s + 1;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ test_func___3(арг)(
    НАПЕЧАТАТЬ арг;
    ВЕРНУТЬ арг + "2938047239847329";
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ цикл_пока(икс)(
    НАПЕЧАТАТЬ "икс=" + to_string(икс);

    ЕСЛИ икс БОЛЬШЕ 10 ТО (
        ВЕРНУТЬ ЛОЖЬ;
    )

     НАПЕЧАТАТЬ 123123;

    ВЕРНУТЬ ИСТИНА;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ цикл(икс)(
    НАПЕЧАТАТЬ "икс=" + to_string(икс);

    ЕСЛИ икс БОЛЬШЕ 10 ТО (
        ВЕРНУТЬ ЛОЖЬ;
    )

     НАПЕЧАТАТЬ 123123;

    ВЕРНУТЬ ИСТИНА;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ test_func___2(арг)(
    test_func___4(133);
    ЗАДАТЬ икс = 1;
    # ЗАДАТЬ ЗАДАТЬ = 1;
    НАПЕЧАТАТЬ  "2="+ to_string(2);
    НАПЕЧАТАТЬ 1 + 2;

    # ЦИКЛ ОТ
    ПОКА цикл_пока(икс) (
        икс = икс + 1;
        # ПРОПУСТИТЬ;
        НАПЕЧАТАТЬ икс;
        НАПЕЧАТАТЬ "икс" * 4;
        # ПРЕРВАТЬ;
        # НАПЕЧАТАТЬ "test_func___3(to_string(ИСТИНА И ЛОЖЬ) * 20)=" + test_func___3(to_string(ИСТИНА И ЛОЖЬ) * 20);
    )

    НАПЕЧАТАТЬ икс;
    # НАПЕЧАТАТЬ "test_func___3(to_string(ИСТИНА И ЛОЖЬ) * 20)=" + test_func___3(to_string(ИСТИНА И ЛОЖЬ) * 20);
    ВЕРНУТЬ икс;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ test_func___1(f)(
НАПЕЧАТАТЬ f;
НАПЕЧАТАТЬ "123";
    # ошибочная1(); НАПЕЧАТАТЬ "счет НАПЕЧАТАТЬ;;";
)


ОПРЕДЕЛИТЬ ПРОЦЕДУРУ test_loop(a)(
    ЕСЛИ ЛОЖЬ ТО (
    )
    ИНАЧЕ (
        НАПЕЧАТАТЬ "Прив";
    )

    # ошибочная = 1;
    # НАПЕЧАТАТЬ ошибочная;
    НАПЕЧАТАТЬ test_func___1(f);
    НАПЕЧАТАТЬ test_func___1(to_string);
    # НАПЕЧАТАТЬ "счет" + to_string(test_func___1);
    ЗАДАТЬ счет = 0;
    НАПЕЧАТАТЬ ошибочная;

    ЕСЛИ ИСТИНА ТО (
       # счет = ошибочная;
       НАПЕЧАТАТЬ "NTCN";
       НАПЕЧАТАТЬ ошибочная;
       ошибочная = 1;
       НАПЕЧАТАТЬ ошибочная;
       НАПЕЧАТАТЬ "NTCN";
       # счет = 1;
    )
    НАПЕЧАТАТЬ ошибочная;
    НАПЕЧАТАТЬ счет;

    # НАПЕЧАТАТЬ to_string(f);

    НАПЕЧАТАТЬ test_func___1(f);

    ЦИКЛ ОТ 1 ДО 5 (
        ЗАДАТЬ счет = счет + 1;
        НАПЕЧАТАТЬ счет;
        НАПЕЧАТАТЬ "LOOP 1";

        # ПРОПУСТИТЬ;
        # ПРЕРВАТЬ;

        ЕСЛИ ИСТИНА ТО (
            ЕСЛИ ИСТИНА ТО (
                ЕСЛИ ИСТИНА ТО (
                    ЦИКЛ ОТ 1 ДО 5 (
                        НАПЕЧАТАТЬ "LOOP 2";
                        ПРОПУСТИТЬ;
                        # ПРЕРВАТЬ;
                        НАПЕЧАТАТЬ "LOOP 2 END";
                    )
                )
            )
        )
        НАПЕЧАТАТЬ 2;
    )
    НАПЕЧАТАТЬ 3;
)


ОПРЕДЕЛИТЬ ПРОЦЕДУРУ ошибочная()(
    "счет" + to_string(f);
    -1;
    # ошибочная1(); НАПЕЧАТАТЬ "счет НАПЕЧАТАТЬ;;";
)


ОПРЕДЕЛИТЬ ПРОЦЕДУРУ f(аргумент)(
    НАПЕЧАТАТЬ ИСТИНА + ИСТИНА;
    НАПЕЧАТАТЬ to_string(1);
    ЗАДАТЬ ввод = input;
    ЗАДАТЬ тест = -(2 + to_number(ввод("УГАР)"))) * (-2);
    НАПЕЧАТАТЬ тест;
    тест;
    НАПЕЧАТАТЬ (обертка(to_string_custom));

    ЗАДАТЬ возраст = input("Нашите, свой возраст: ");
    НАПЕЧАТАТЬ "ВЫ написали, что вам: " + возраст + " лет!";

    ЗАДАТЬ возраст = to_number(возраст);

    ЕСЛИ возраст РАВНО 12 ТО (
        НАПЕЧАТАТЬ "Привет, Арсений!";
    )
    ИНАЧЕ (
        НАПЕЧАТАТЬ "Я Вас не знаю!";
    )
    ВЕРНУТЬ возраст;

    #ЗАДАТЬ to_string = to_string_custom;
    #НАПЕЧАТАТЬ to_string(123);

    # ЗАДАТЬ икс = 1;
    # ЕСЛИ ИСТИНА ТО (
     #   НАПЕЧАТАТЬ to_string(123);
     #   НАПЕЧАТАТЬ икс;
    #)

    #ВЕРНУТЬ 1;
)


ОПРЕДЕЛИТЬ ПРОЦЕДУРУ to_string_custom(arg)(
    ВЕРНУТЬ to_string(arg) * 2;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ func_wa(аргумент)(
    НАПЕЧАТАТЬ "23123423";
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ func1(f1)(
    НАПЕЧАТАТЬ "f1=" + to_string(f1);
   # НАПЕЧАТАТЬ "f1=" + to_string(f1);
    #ВЕРНУТЬ аргумент + 1;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ func()(
    НАПЕЧАТАТЬ "Ты мертв.";
    НАПЕЧАТАТЬ 1 + 1;
    НАПЕЧАТАТЬ "Ты мертв.";
    НАПЕЧАТАТЬ "Ты мертв.";
    ВЕРНУТЬ 1;
)




ОПРЕДЕЛИТЬ ПРОЦЕДУРУ Премия(премия)(
    ЗАДАТЬ to_string = to_string_custom;
    НАПЕЧАТАТЬ to_string(123);

    НАПЕЧАТАТЬ func_wa(2);
    # func1(func1(func));
    #fwa();
    НАПЕЧАТАТЬ to_number("1e4");
    input();
    # НАПЕЧАТАТЬ func1(func1(func2(func1(func()))));
    # input(input(input(input(input(input(""))))));
    #ЗАДАТЬ input = 1;

    ЗАДАТЬ лет = to_number(input("Сколько Вам лет? Напишите: "));

    ЕСЛИ лет МЕНЬШЕ 1 ТО (
        НАПЕЧАТАТЬ "Ты мертв.";
        ВЕРНУТЬ 1;
    )

    ЕСЛИ лет БОЛЬШЕ 18 ТО (
        НАПЕЧАТАТЬ "Привет, бро!";
        ЕСЛИ лет БОЛЬШЕ 100 ТО (
            print("Ого! " +"'"+to_string(лет)+"'" + " - это " + "очень-" * 3 + " много!" );
        )
    )
    ИНАЧЕ (
        НАПЕЧАТАТЬ "Вам пока сюда нельзя!";
        ВЕРНУТЬ 1;
    )

    НАПЕЧАТАТЬ to_string(ИСТИНА) * 2;
    НАПЕЧАТАТЬ ИСТИНА * 11;

    ЗАДАТЬ переменную1 = to_number("1e1");
    НАПЕЧАТАТЬ переменную1 + 1;
    ЗАДАТЬ переменную = to_number(input("->"));
    НАПЕЧАТАТЬ переменную * 2;
    # f(10);

    НАПЕЧАТАТЬ 1;
    НАПЕЧАТАТЬ (1 ИЛИ 0) + 1;
    #recursive(99);
    #НАПЕЧАТАТЬ recursive(recursive(10000 + 10000 / 2));
    #НАПЕЧАТАТЬ "{} + {} = {}";

    # TODO: Исправить этот баг!!! Это выражение по какой-то причине считается валидным.
    # НАПЕЧАТАТЬ *2(+1+1);

    НАПЕЧАТАТЬ 2 * (test_func(test_func(1 + 1) * 2) - 1);
    НАПЕЧАТАТЬ test_func(test_func(1 + 1) * 2 ^ recursive(10));
    НАПЕЧАТАТЬ test_func(2 * test_func(1 + 1));

    #НАПЕЧАТАТЬ ЗП_С;
    ((((((2+2))))))*2;
    ##################### 1 / 0; # Будет ошибка. Деление на 0
    #ЗАДАТЬ ЗП_С = 1 + 1;

    #ЦИКЛ ОТ 1 ДО 100 * 1000 (
    #    1 + 1;
    #)

    ВЕРНУТЬ 1;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ test_func(arg1)(
    # НАПЕЧАТАТЬ "ПРИВЕТ ИЗ test_func";
    ВЕРНУТЬ arg1 + 2;
)


ОПРЕДЕЛИТЬ ПРОЦЕДУРУ recursive(arg)(
    #НАПЕЧАТАТЬ "ПРИВЕТ ИЗ recursive";

    #test_func(arg);

    ЕСЛИ arg БОЛЬШЕ 100 ТО (
        НАПЕЧАТАТЬ "arg=";
        НАПЕЧАТАТЬ arg;
        ВЕРНУТЬ arg;
    )

    ВЕРНУТЬ recursive(arg + 1);
)


ОПРЕДЕЛИТЬ САНКЦИЮ название_типа_санкции2 (
    СТАТЬЯ Статья 8.4 КоАП,
)
ОПРЕДЕЛИТЬ ПРАВО название_права (
    ОПИСАНИЕ Описание права))),
)

ОПРЕДЕЛИТЬ ОБЯЗАННОСТЬ название_обязанности11 (
    ОПИСАНИЕ Описание обязанности))),
)

ОПРЕДЕЛИТЬ ПРАВИЛО названиеправила (
    ОПИСАНИЕ Описание (,,,,,,,((правила))),,,,
)

ОПРЕДЕЛИТЬ СУБЪЕКТ название_субъекта (
    ИМЯ Добрый Добряк Добрякович,
)

ОПРЕДЕЛИТЬ ОБЪЕКТ название_объекта (
    ИМЯ Загрязнённый водоём,
)

ОПРЕДЕЛИТЬ УСЛОВИЕ название_условия (
    ОПИСАНИЕ Условие, при котором предприятие должно соблюдать экологические нормы, включая запрет на сбросы загрязняющих веществ в водоёмы.,
    КРИТЕРИИ (
		ПремияСотрудника ПРОЦЕДУРА test_func___2 МЕНЬШЕ ,
    )
)


СОЗДАТЬ ДОКУМЕНТ название_документа (
    ДИСПОЗИЦИЯ (
        ПРАВО название_права,
        ОБЯЗАННОСТЬ название_обязанности11,
        ПРАВИЛО названиеправила,
    )
    САНКЦИЯ (
        ТИПЫ [название_типа_санкции название_типа_санкции],
        СТЕПЕНЬ СТРОГОСТИ ОЧЕНЬ_ВЫСОКАЯ,
        ПРОЦЕССУАЛЬНЫЙ АСПЕКТ Экологическая_экспертиза,
    )
    ГИПОТЕЗА (
        СУБЪЕКТ название_субъекта,
        ОБЪЕКТ название_объекта,
        УСЛОВИЕ название_условия,
    )
)


СОЗДАТЬ ФАКТИЧЕСКУЮ СИТУАЦИЮ название_фактической_ситуации2 (
    ОБЪЕКТ название_объекта,
    СУБЪЕКТ название_субъекта,

   ДАННЫЕ (
		ПремияСотрудника 150000,
    )
)


ПРОВЕРКА проверка_субъекта3 (
	ФАКТИЧЕСКАЯ СИТУАЦИЯ название_фактической_ситуации2,
	ДОКУМЕНТ название_документа,
)


ОПРЕДЕЛИТЬ ПРОЦЕДУРУ обертка(func)(
    НАПЕЧАТАТЬ func("!11") * 2;
    НАПЕЧАТАТЬ to_string("!11");
    НАПЕЧАТАТЬ to_string_custom("!11");
    НАПЕЧАТАТЬ "Success!@";
    #обертка(1);


    ошибочная();
)
