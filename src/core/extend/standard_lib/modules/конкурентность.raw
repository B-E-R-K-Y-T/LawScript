ВКЛЮЧИТЬ стандартная_библиотека.структуры.примитивные_структуры
ВКЛЮЧИТЬ стандартная_библиотека.строки
ВКЛЮЧИТЬ стандартная_библиотека._.util


ОПРЕДЕЛИТЬ КЛАСС ПланировщикЗадач (
    ОПРЕДЕЛИТЬ КОНСТРУКТОР (ссылка) () (
        ссылка:_задачи = массив();
    )

    ОПРЕДЕЛИТЬ МЕТОД (ссылка) добавить(задача) (
        добавить_в_массив(ссылка:_задачи, задача);
    )

    ОПРЕДЕЛИТЬ МЕТОД (ссылка) результаты() (
        ЗАДАТЬ результаты = ждать_всех(ссылка:_задачи);

        БЛОКИРОВАТЬ (
            очистить_массив(ссылка:_задачи);
        )

        ВЕРНУТЬ результаты;
    )
)

ОПРЕДЕЛИТЬ КЛАСС ГруппировщикЗадач (
    ОПРЕДЕЛИТЬ КОНСТРУКТОР (ссылка) () (
        ссылка:_количество_задач = 0;
    )

    ОПРЕДЕЛИТЬ МЕТОД (ссылка) добавить(кол_во_задач) (
        БЛОКИРОВАТЬ (
            ссылка:_количество_задач = ссылка:_количество_задач + кол_во_задач;
        )
    )

    ОПРЕДЕЛИТЬ МЕТОД (ссылка) готов() (
        БЛОКИРОВАТЬ (
            ссылка:_количество_задач = ссылка:_количество_задач - 1;
            ссылка:_проверка_счетчика();
        )
    )

    ОПРЕДЕЛИТЬ МЕТОД (ссылка) ждать(таймаут=0) (
        ЗАДАТЬ время_начала = временная_метка();

        ПОКА ИСТИНА (
            ссылка:_проверка_счетчика();

            БЛОКИРОВАТЬ (
                ЕСЛИ ссылка:_количество_задач РАВНО 0 ТО (
                    ВЕРНУТЬ;
                )
            )
            ЕСЛИ таймаут И (временная_метка() - время_начала) БОЛЬШЕ таймаут ТО (
                ОШИБКА ОшибкаВремениВыполненияЗадачи();
            )
            спать(0.01);
        )
    )

    ОПРЕДЕЛИТЬ МЕТОД (ссылка) _проверка_счетчика() (
        БЛОКИРОВАТЬ (
            ЕСЛИ ссылка:_количество_задач МЕНЬШЕ 0 ТО (
                ОШИБКА ОтрицательноеКоличествоЗадач(ссылка:_количество_задач);
            )
        )
    )
)

ОПРЕДЕЛИТЬ КЛАСС СобытиеСинхронизатор (
    ОПРЕДЕЛИТЬ КОНСТРУКТОР (ссылка) () (
        ссылка:_событие_случилось = ЛОЖЬ;
    )

    ОПРЕДЕЛИТЬ МЕТОД (ссылка) иницировать_событие() (
        БЛОКИРОВАТЬ (
            ссылка:_событие_случилось = ИСТИНА;
        )
    )

    ОПРЕДЕЛИТЬ МЕТОД (ссылка) выполнено() (
        БЛОКИРОВАТЬ (
            ВЕРНУТЬ ссылка:_событие_случилось;
        )
    )
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ ждать_всех(задачи) (
    ДОКУМЕНТАЦИЯ (
        Передайте сюда массив запущенных в фоне процедур.
        ПРОБЕЛ
        Данная процедура будет ждать все фоновые задачи
        и вернет их результаты массивом, в том же порядке,
        что и во входном массиве.
    )

    ЗАДАТЬ длина = длина_массива(задачи);
    ЗАДАТЬ результаты = массив();
    ЗАДАТЬ результат = ПУСТОТА;

    ЦИКЛ индекс ОТ 0 ДО длина - 1 (
        результат = ЖДАТЬ достать_из_массива(задачи, индекс);
        добавить_в_массив(результаты, результат);
    )

    ВЕРНУТЬ результаты;
)

ОПРЕДЕЛИТЬ КЛАСС ОшибкаЗадачи НАСЛЕДОВАТЬ ОТ БазоваяОшибка (
    ОПРЕДЕЛИТЬ КОНСТРУКТОР (ссылка) () (
    )
)

ОПРЕДЕЛИТЬ КЛАСС ОтрицательноеКоличествоЗадач НАСЛЕДОВАТЬ ОТ ОшибкаЗадачи (
    ОПРЕДЕЛИТЬ КОНСТРУКТОР (ссылка) (кол_во_задач) (
        ссылка:информация = форматировать_строку("Ошибка! Количество задач '{}' стало меньше нуля!", кол_во_задач);
    )
)

ОПРЕДЕЛИТЬ КЛАСС ОшибкаВремениВыполненияЗадачи НАСЛЕДОВАТЬ ОТ ОшибкаЗадачи (
    ОПРЕДЕЛИТЬ КОНСТРУКТОР (ссылка) (информация=ПУСТОТА) (
        ссылка:информация = информация;

        ЕСЛИ ссылка:информация РАВНО ПУСТОТА ТО (
            ссылка:информация = "Задача выполнялась слишком долго!";
        )
    )
)
