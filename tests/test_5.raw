ВКЛЮЧИТЬ libs.*


ОПРЕДЕЛИТЬ ПРОЦЕДУРУ предикат_больше111(а, б) (

   НАПЕЧАТАТЬ ЖДАТЬ задача3 + ЖДАТЬ В ФОНЕ задача4;

   НАПЕЧАТАТЬ НЕ ((задача3) ИЛИ (задача4)) РАВНО 1 БОЛЬШЕ 2;
   НАПЕЧАТАТЬ (НЕ ((задача3) ИЛИ (задача4))) РАВНО (1 БОЛЬШЕ 2);


   НАПЕЧАТАТЬ ЖДАТЬ задача3 + ЖДАТЬ задача4;
   НАПЕЧАТАТЬ ЖДАТЬ задача3 + ЖДАТЬ В ФОНЕ задача4;
   НАПЕЧАТАТЬ ЖДАТЬ задача3 - ЖДАТЬ задача4;
   НАПЕЧАТАТЬ ЖДАТЬ задача3 * ЖДАТЬ задача4;
   НАПЕЧАТАТЬ ЖДАТЬ задача3 / ЖДАТЬ задача4;
   НАПЕЧАТАТЬ ЖДАТЬ задача3 ^ ЖДАТЬ задача4;
   НАПЕЧАТАТЬ ЖДАТЬ задача3 И ЖДАТЬ задача4;
   НАПЕЧАТАТЬ ЖДАТЬ задача3 ИЛИ ЖДАТЬ задача4;
   НАПЕЧАТАТЬ (ЖДАТЬ задача3) ИЛИ (ЖДАТЬ задача4);
   НАПЕЧАТАТЬ НЕ ((ЖДАТЬ задача3) ИЛИ (ЖДАТЬ задача4)) ;
   НАПЕЧАТАТЬ (НЕ ((ЖДАТЬ задача3) ИЛИ (ЖДАТЬ задача4))) РАВНО (1 БОЛЬШЕ 2);
   # ЗАДАТЬ задача = массив(-старт());
   ЗАДАТЬ задача = В ФОНЕ старт();
    ЗАДАТЬ м1 = массив;

    процедура(м1, 555, 4344);

    ЗАДАТЬ д_проц2 = логер_декоратор;
    НАПЕЧАТАТЬ д_проц2;

    # НАПЕЧАТАТЬ пузырьковая_сортировка(коллекция, предикат_больше);

    ЗАДАТЬ функ = предикат_больше;
    проц(функ(1,2)) - проц(функ(3,4)) + функ(5, 6);
)


ОПРЕДЕЛИТЬ ПРОЦЕДУРУ процедура_1() (
    НАПЕЧАТАТЬ процедура_1;
    процедура_2(процедура_3);
)


ОПРЕДЕЛИТЬ ПРОЦЕДУРУ процедура_2(проц) (
    НАПЕЧАТАТЬ процедура_2;
    проц();
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ процедура_3() (
    НАПЕЧАТАТЬ процедура_3;
    процедура_1();
)



ОПРЕДЕЛИТЬ ПРОЦЕДУРУ логер_обертка(проц) (

)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ логер_декоратор(проц) (
    НАПЕЧАТАТЬ проц;
    НАПЕЧАТАТЬ "НЦ ВЫЗОВ";
    проц();
    НАПЕЧАТАТЬ проц;
    НАПЕЧАТАТЬ "КЦ ВЫЗОВ";
)



ОПРЕДЕЛИТЬ ПРОЦЕДУРУ предикат_больше(а, б) (
    ВЕРНУТЬ а БОЛЬШЕ б;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ предикат_меньше(а, б) (
    ВЕРНУТЬ а МЕНЬШЕ б;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ пузырьковая_сортировка(мас, предикат=предикат_меньше) (
    ЗАДАТЬ n = длина_массива(мас) - 1;
    ЕСЛИ длина_массива(мас) РАВНО 0 ТО (
        НАПЕЧАТАТЬ "массив пуст.";
        ВЕРНУТЬ мас;
    )

    ЗАДАТЬ временная = достать_из_массива(мас, 0);

    # Внешний цикл для проходов по массиву
    ЦИКЛ i ОТ 0 ДО n - 1 (
        # Внутренний цикл для сравнения элементов
        ЦИКЛ j ОТ 0 ДО n - i - 1 (
            # Сравниваем соседние элементы
            ЕСЛИ предикат(достать_из_массива(мас, j), достать_из_массива(мас, j + 1)) ТО (
                # Меняем элементы местами
                временная = достать_из_массива(мас, j);
                изменить_в_массиве(мас, j, достать_из_массива(мас, j + 1));
                изменить_в_массиве(мас, j + 1, временная);
            )
            j = j + 1;
        )
        i = i + 1;
    )

    ВЕРНУТЬ мас;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ старт()(
    ЗАДАТЬ коллекция = массив(1, 5, -1, 0, 0, 1, 200, -1, 0, 1, 45);

    НАПЕЧАТАТЬ пузырьковая_сортировка(коллекция);
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ декоратор()(
    ВЕРНУТЬ обертка;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ обертка()(
    ВЕРНУТЬ 1;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ тест(ф=обертка)(
    # НАПЕЧАТАТЬ ф();
    ВЕРНУТЬ 1;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ тест2(ф=тест)(
    НАПЕЧАТАТЬ форматировать_строку("тест={}", в_строку(ф));
    НАПЕЧАТАТЬ форматировать_строку("тест={}", в_строку(ф()));
    НАПЕЧАТАТЬ "---";
    НАПЕЧАТАТЬ ф;
    НАПЕЧАТАТЬ "---";
    НАПЕЧАТАТЬ в_строку(ф());
    НАПЕЧАТАТЬ "---";
   # НАПЕЧАТАТЬ ф();

    НАПЕЧАТАТЬ форматировать_строку("тест={}", в_строку(ф()));
    тест3(ф);
    ВЕРНУТЬ 1;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ тест3(ф)(
   # НАПЕЧАТАТЬ форматировать_строку("ф()={}", в_строку(ф()));
   НАПЕЧАТАТЬ в_строку(ф());
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ проц(пред=предикат_меньше)(
    НАПЕЧАТАТЬ пред(1, 2);
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ проц1()(
    НАПЕЧАТАТЬ "фывфыв";
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ проц2()(
    ВЕРНУТЬ 1;
)

ОПРЕДЕЛИТЬ ПРОЦЕДУРУ func(a)(
   ЗАДАТЬ задача = В ФОНЕ старт();
   ЗАДАТЬ задача3 = В ФОНЕ проц2();
   ЗАДАТЬ задача4 = В ФОНЕ проц2();

   НАПЕЧАТАТЬ ЖДАТЬ задача3 + ЖДАТЬ задача4;

   ЗАДАТЬ задача2 = ЖДАТЬ В ФОНЕ  массив(ЖДАТЬ В ФОНЕ массив(1, ЖДАТЬ В ФОНЕ массив(2 ,3 )));

    ЗАДАТЬ ччч = 1;
    НАПЕЧАТАТЬ ччч;


    ЗАДАТЬ д_проц2 = логер_декоратор;
    ЗАДАТЬ д_проц1 = логер_декоратор(проц1);
    НАПЕЧАТАТЬ д_проц2;

    ЗАДАТЬ коллекция = массив(1, 5, -1, 0, 0, 1, 200, -1, 0, 1, 45);
    НАПЕЧАТАТЬ пузырьковая_сортировка(коллекция, предикат_больше);
    ЗАДАТЬ функ = предикат_больше;
    # проц(функ(1,2)) - проц(функ(3,4)) + функ(5, 6);
    # проц();
    старт();

    # ЖДАТЬ задача;
    # процедура_1();

    # ЗАДАТЬ икс = 1;
    # икс();


#тест2(декоратор);

 #   ЗАДАТЬ ф = декоратор();
  #  НАПЕЧАТАТЬ в_строку(ф());

#НАПЕЧАТАТЬ тест()  + 1 + тест2(декоратор);
#НАПЕЧАТАТЬ декоратор();
#    НАПЕЧАТАТЬ ф;
#    НАПЕЧАТАТЬ ф();
#    НАПЕЧАТАТЬ ф();
#тест();


    НАПЕЧАТАТЬ массив(массив, массив, массив, таблица(массив("Ключ"), массив(1)));
    НАПЕЧАТАТЬ массив;

    НАПЕЧАТАТЬ ЖДАТЬ задача2;
    ВЕРНУТЬ 1;
)


ОПРЕДЕЛИТЬ САНКЦИЮ название_типа_санкции2 (
    СТАТЬЯ Статья 8.4 КоАП,
)
ОПРЕДЕЛИТЬ ПРАВО название_права (
    ОПИСАНИЕ Описание права))),
)

ОПРЕДЕЛИТЬ ОБЯЗАННОСТЬ название_обязанности11 (
    ОПИСАНИЕ Описание обязанности))),
)

ОПРЕДЕЛИТЬ ПРАВИЛО названиеправила (
    ОПИСАНИЕ Описание (,,,,,,,((правила))),,,,
)

ОПРЕДЕЛИТЬ СУБЪЕКТ название_субъекта (
    ИМЯ Добрый Добряк Добрякович,
)

ОПРЕДЕЛИТЬ ОБЪЕКТ название_объекта (
    ИМЯ Загрязнённый водоём,
)

ОПРЕДЕЛИТЬ УСЛОВИЕ название_условия (
    ОПИСАНИЕ Условие, при котором предприятие должно соблюдать экологические нормы, включая запрет на сбросы загрязняющих веществ в водоёмы.,
    КРИТЕРИИ (
		ПремияСотрудника ПРОЦЕДУРА func МЕНЬШЕ ,
    )
)


СОЗДАТЬ ДОКУМЕНТ название_документа (
    ДИСПОЗИЦИЯ (
        ПРАВО название_права,
        ОБЯЗАННОСТЬ название_обязанности11,
        ПРАВИЛО названиеправила,
    )
    САНКЦИЯ (
        ТИПЫ [название_типа_санкции название_типа_санкции],
        СТЕПЕНЬ СТРОГОСТИ ОЧЕНЬ_ВЫСОКАЯ,
        ПРОЦЕССУАЛЬНЫЙ АСПЕКТ Экологическая_экспертиза,
    )
    ГИПОТЕЗА (
        СУБЪЕКТ название_субъекта,
        ОБЪЕКТ название_объекта,
        УСЛОВИЕ название_условия,
    )
)


СОЗДАТЬ ФАКТИЧЕСКУЮ СИТУАЦИЮ название_фактической_ситуации2 (
    ОБЪЕКТ название_объекта,
    СУБЪЕКТ название_субъекта,

   ДАННЫЕ (
		ПремияСотрудника 150000,
    )
)


ПРОВЕРКА проверка_субъекта3 (
	ФАКТИЧЕСКАЯ СИТУАЦИЯ название_фактической_ситуации2,
	ДОКУМЕНТ название_документа,
)

